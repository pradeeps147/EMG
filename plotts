clc; clear all; close all;

% Setup FT
% Instruction - set paths to FT toolbox path appropriately
restoredefaultpath
addpath([matlabroot,'\toolbox_add_on'])
%addpath('C:\Users\sarat\Dropbox\codes\newCodes')
addpath([matlabroot,'\toolbox_add_on\fieldtrip-20171231'])  
addpath('C:\Users\USER\Desktop\plots stroke pPER') 
addpath([matlabroot,'\toolbox_add_on\export_fig'])
addpath('C:\Users\USER\Desktop')
ft_path = [matlabroot,'\toolbox_add_on\fieldtrip-20171231\'];

ft_defaults

%% COHERENCE SPECTRUM
cfg = []; cfg.parameter = 'cohspctrm';
for cond = 1:7
    for subj = 1:12
    coh_full_mat(subj,cond,:,:) = coh{subj,cond}.cohspctrm; 
    pow_full_mat(subj,cond,:,:) = FREQ_EMG.freq_desc{subj,cond}.powspctrm; 
    rms_full_mat(subj,cond,:) = mean(rms{subj,cond}.rms);
%     coh_GA{cond} = ft_freqgrandaverage(cfg,coh{:,cond});
    end
end

avg.coh = squeeze(mean(coh_full_mat));
avg.pow = squeeze(mean(pow_full_mat));
avg.rms = squeeze(mean(rms_full_mat));

plot(squeeze(mean(avg.pow([1:7],:,[8:35]),3)'))

%% compute means
freq_range = [12:30];
simple_0 = [1,3]; simple_30 = [2,4];
cmplx_0 = 5; cmplx_30 = 7;
clear summ_val;

clus_var = {{1,3}, {2,4}, {5}, {7}};
clus_name = {'simple_0', 'simple_30', 'cmplx_0', 'cmplx_30'};
vars = {'coh', 'pow', 'rms'};
ag_muscles = {'EMG_R_Trapezius','EMG_R_Deltiod', 'EMG_R_Triceps', 'EMG_R_Biceps', ...
              'EMG_L_Trapezius','EMG_L_Deltiod', 'EMG_L_Triceps', 'EMG_L_Biceps', };
[dimx, dimy]=match_str(coh{1,1}.labelcmb, ag_muscles);
ag_cmb_coh = find(dimx<67);
[dimx, dimy]=match_str(FREQ_EMG.freq_desc{1,1}.label, ag_muscles);
ag_cmb_pow_rms = find(dimx<67);


for clusLoop=1:4
    varLoop=1;
        summ_val.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],:,freq_range),3),1);
        summ_val_ag.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],ag_cmb_coh,freq_range),3),1);
end

for clusLoop=1:4
    varLoop=2;
        summ_val.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],:,freq_range),3),1);
        summ_val_ag.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],ag_cmb_pow_rms,freq_range),3),1);
end

for clusLoop=1:4
    varLoop=3;
        summ_val.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],:),1);
        summ_val_ag.(vars{varLoop}).(clus_name{clusLoop}) = ...
                mean(avg.(vars{varLoop})([clus_var{clusLoop}{:}],ag_cmb_pow_rms),1);
end


%%

% coh_avg_simple_0 = mean(mean(avg.coh([1,3],:,freq_range),3));
% coh_avg_simple_30 = mean(mean(avg.coh([2,4],:,freq_range),3));
% coh_avg_cmplx_0 = mean(avg.coh([5],:,freq_range),3);
% coh_avg_cmplx_30 =mean(avg.coh([7],:,freq_range),3);

%%
% clf(gcf)
% varLoop=1;
% set(0,'DefaultAxesColor','none') 
% % for clusLoop=1:4
%     plot(summ_val.(vars{varLoop}).(clus_name{1}), 'b'), hold on
%     plot(summ_val.(vars{varLoop}).(clus_name{2}), '.--b'), hold on
%     plot(summ_val.(vars{varLoop}).(clus_name{3}), 'r'), hold on
%     plot(summ_val.(vars{varLoop}).(clus_name{4}), '.--r'), hold on
% % end
% title([vars{varLoop}])
% legend(clus_name{:})
% set (gcf, 'Units', 'Normalized', 'OuterPosition', [0,0,0.5,0.5]); 
% %set(gcf, 'Color', 'none');
% saveas(gcf, 'Fig1_Coh.png');
% export_fig Fig1_Coh.png;
% 
% saveas(gcf, 'Fig1_Coh.pdf');
% export_fig Fig1_Coh.pdf;

%% RMS/Coh/Pow - Simple (0,30) vs complex (0,30)
clrOp1 = rgb('Maroon');%[0.7 0.2 0.2];
clrOp2 = rgb('SeaGreen');%[0.4 0.4 0.4];
vars_title = {'Inter-muscular coherence (12-30 Hz)', 'Beta power (12-30 Hz)', 'Muscle output (RMS)'}
%set(0,'DefaultAxesColor','none')     
clf(gcf)
plotPosition=1;
for varLoop=1:3
    if varLoop==2
        continue;
    end
    
    subplot(1,2,plotPosition)
       dat_sel_1 =  [summ_val.(vars{varLoop}).(clus_name{1}),...
        summ_val.(vars{varLoop}).(clus_name{2})];
    clus_simple_mean = mean(dat_sel_1);
    clus_simple_std= std(dat_sel_1)/sqrt(length(dat_sel_1));   %clus_simple_std= sem(dat_sel); ADDED SEM
    dat_sel_2 =  [summ_val.(vars{varLoop}).(clus_name{3}),...
        summ_val.(vars{varLoop}).(clus_name{4})];
    clus_cmplx_mean = mean(dat_sel_2);
    clus_cmplx_std= std(dat_sel_2)/sqrt(length(dat_sel_2));  %clus_cmplx_std = sem(dat_sel);
    [h, p, ci, stats] = ttest2(dat_sel_1,dat_sel_2);
%     plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on
%     if varLoop==2
%         coninue;
%     end
    e2=errorbar([clus_simple_mean,clus_cmplx_mean],...
        [clus_simple_std,clus_cmplx_std], '-o');
    set(e2, 'MarkerSize', 6,'Color', clrOp1 , 'MarkerFaceColor', clrOp1 , ...
    'MarkerEdgeColor', clrOp1);
    set(e2,'LineWidth', 2 )
    xlim([0 3])
    title(sprintf('%s  \n p: %0.2f; t: %2.2f',vars_title{varLoop}, p, stats.tstat));
    box off
    
     yt1 = yticks;
yt = zeros(10,1); count=0;
for i=1:length(yt1)
    if (rem (i,3) ==0)
        count=count+1;
        yt(count)=yt1(i);
    end
end
%i=i+1;
    i1 = find(yt, 1, 'first'); i2 = find(yt, 1, 'last');
    yt=yt(i1:i2)
    set(gca,'YTick',yt)
    set(gca, 'Color', 'white');
    set(gca,'XTick',[1 2])

   % set(gca,'Visible','off')           %Removing everything except graph
    set(gca,'XTickLabel',{'Simple reach', 'Complex reach'} );
    plotPosition=plotPosition+1;
end

suptitle({'Effect of complexity across all muscles (n=12) ' , ' '})
set(gcf, 'Units', 'Normalized', 'OuterPosition', [0,0,0.42,0.6]); 
set(gcf, 'Color', 'white');
saveas(gcf, 'Fig2_SimpleComplex.png');
export_fig Fig2_SimpleComplex.png;

saveas(gcf, 'Fig2_SimpleComplex.pdf');
export_fig Fig2_SimpleComplex.pdf;
%FIXME - add individual points

%% RMS/Coh/Pow - effect of elevation - simple/complex
vars_title = {'Inter-muscular coherence (12-30 Hz)', 'Beta power (12-30 Hz)', 'Muscle output (RMS)'}
clf(gcf)

%set(0,'DefaultAxesColor','none')
plotPosition=1;
for varLoop=1:3
    if varLoop==2
        continue;
    end
    subplot(1,2,plotPosition)
 dat_sel_1 =  [summ_val.(vars{varLoop}).(clus_name{1}),...
        summ_val.(vars{varLoop}).(clus_name{3})];
    clus_simple_mean = mean(dat_sel_1);
    clus_simple_std= std(dat_sel_1)/sqrt(length(dat_sel_1)); %clus_simple_std= sem(dat_sel);
    dat_sel_2 =  [summ_val.(vars{varLoop}).(clus_name{2}),...
        summ_val.(vars{varLoop}).(clus_name{4})];
    clus_cmplx_mean = mean(dat_sel_2);
     clus_cmplx_std= std(dat_sel_2)/sqrt(length(dat_sel_2));  %clus_cmplx_std = sem(dat_sel);
     [h, p, ci, stats] = ttest2(dat_sel_1,dat_sel_2);
%     plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on
    e2=errorbar([clus_simple_mean,clus_cmplx_mean],...
        [clus_simple_std,clus_cmplx_std], '-o');
    set(e2, 'MarkerSize', 6,'Color', clrOp1 , 'MarkerFaceColor', clrOp1 , ...
    'MarkerEdgeColor', clrOp1);
    set(e2,'LineWidth', 2 )
    xlim([0 3])
    title(sprintf('%s  \n p: %0.2f; t: %2.2f',vars_title{varLoop}, p, stats.tstat));set(gca,'XTick',[1 2])
    box off
    
     yt1 = yticks;
yt = zeros(10,1); count=0;
for i=1:length(yt1)
    if (rem (i,3) ==0)
        count=count+1;
        yt(count)=yt1(i);
    end
end
 %i=i+1;
    i1 = find(yt, 1, 'first'); i2 = find(yt, 1, 'last');
    yt=yt(i1:i2)
    set(gca,'YTick',yt)
   set(gcf, 'Color', 'white');
    set(gca,'XTick',[1 2])
    set(gca,'XTickLabel',{'Elevation 0^o', 'Elevation 30^o'} );
    % i=i+1;
    plotPosition=plotPosition+1;
end

suptitle({'Effect of inclination across all muscles (n=12)', ' '})
set(gcf, 'Color', 'white');
set (gcf, 'Units', 'Normalized', 'OuterPosition', [0,0,0.48,0.6]);
saveas(gcf, 'Fig3_elevation_simplecomplex.png');
export_fig Fig3_elevation_simplecomplex.png;
saveas(gcf, 'Fig3_elevation_simplecomplex.pdf');
export_fig Fig3_elevation_simplecomplex.pdf;


%FIXME - add individual points

%% RMS/Coh/Pow - effect of elevation - simple task - only anti-gravity muscles                                     MERGE_1 --un-merged
vars_title = {'Inter-muscular coherence (12-30 Hz)', 'Beta power (12-30 Hz)', 'Muscle output (RMS)'}
figure
clf(gcf)
%set(0,'DefaultAxesColor','none') 
dat_plot = summ_val_ag;
plotPosition=1;
for varLoop=1:3
    if varLoop==2
        continue;
    end
    subplot(1,2,plotPosition)
    dat_sel_1 =  [dat_plot.(vars{varLoop}).(clus_name{1})];%,...
        % dat_plot.(vars{varLoop}).(clus_name{3})];
    clus_simple_mean = mean(dat_sel_1);
    clus_simple_std= std(dat_sel_1)/sqrt(length(dat_sel_1));   %clus_simple_std= sem(dat_sel);
    dat_sel_2 =  [dat_plot.(vars{varLoop}).(clus_name{2})];%,...
%         dat_plot.(vars{varLoop}).(clus_name{4})];
    clus_cmplx_mean = mean(dat_sel_2);
     clus_cmplx_std= std(dat_sel_2)/sqrt(length(dat_sel_2));  %clus_cmplx_std = sem(dat_sel);
     [h, p, ci, stats] = ttest2(dat_sel_1,dat_sel_2);
%     plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on 
    e2=errorbar([clus_simple_mean,clus_cmplx_mean],...
        [clus_simple_std,clus_cmplx_std], '-o'); hold on;
    %plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on
    
%      dat_sel =  [dat_plot.(vars{varLoop}).(clus_name{3})];%,...
% %         dat_plot.(vars{varLoop}).(clus_name{3})];
%     clus_simple_mean = mean(dat_sel);
%     clus_simple_std= std(dat_sel)/sqrt(length(dat_sel));   %clus_simple_std= sem(dat_sel);
%     dat_sel =  [dat_plot.(vars{varLoop}).(clus_name{4})];%,...
% %         dat_plot.(vars{varLoop}).(clus_name{4})];
%     clus_cmplx_mean = mean(dat_sel);                   
%     clus_cmplx_std= std(dat_sel)/sqrt(length(dat_sel));  %clus_cmplx_std = sem(dat_sel);
% %     plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on
%     e3=errorbar([1.2,2.2],[clus_simple_mean,clus_cmplx_mean],...
%         [clus_simple_std,clus_cmplx_std], '-o'); hold on
%     
%     
    set(e2, 'MarkerSize', 6,'Color', clrOp1 , 'MarkerFaceColor', clrOp1 , ...
    'MarkerEdgeColor', clrOp1);
    set(e2,'LineWidth', 2 )
    
%      set(e3, 'MarkerSize', 6,'Color', clrOp2 , 'MarkerFaceColor', clrOp2 , ...
%     'MarkerEdgeColor', clrOp2);
%     set(e3,'LineWidth', 2 )
    
    xlim([0 3])
   % legend ('Simple Task','Complex Task');
    box off;
    title(sprintf('%s  \n p: %0.2f; t:%2.2f',vars_title{varLoop}, p, stats.tstat));    
    set(gca,'XTick',[1 2])
    set(gcf, 'Color', 'white');
    yt1 = yticks;
yt = zeros(10,1); count=0;
for i=1:length(yt1)
    if (rem (i,3) ==0)
        count=count+1;
        yt(count)=yt1(i);
    end
end
    i1 = find(yt, 1, 'first'); i2 = find(yt, 1, 'last');
    yt=yt(i1:i2)
    set(gca,'YTick',yt)
    set(gca,'XTickLabel',{'Elevation 0^o', 'Elevation 30^o'} );
    plotPosition=plotPosition+1;
end

suptitle({'Effect of inclination - simple task - anti-gravity muscles (n=12)',' '})
set (gcf, 'Units', 'Normalized', 'OuterPosition', [0,0,0.48,0.6]);
set(gcf, 'Color', 'white');
saveas(gcf, 'Fig4_elevation_simplecomplex_AG.png');
export_fig Fig4_elevation_simplecomplex_AG.png;

saveas(gcf, 'Fig4_elevation_simplecomplex_AG.pdf');
export_fig Fig4_elevation_simplecomplex_AG.pdf;

%% RMS/Coh/Pow - effect of elevation - complex task - only anti-gravity muscles                                   MERGE_1  ---> MERGED --unmerged
vars_title = {'Inter-muscular coherence (12-30 Hz)', 'Beta power (12-30 Hz)', 'Muscle output (RMS)'}
figure
clf(gcf)
dat_plot = summ_val_ag;
plotPosition=1;
for varLoop=1:3
    if varLoop==2
        continue;
    end
    subplot(1,2,plotPosition)
   dat_sel_1 =  [dat_plot.(vars{varLoop}).(clus_name{3})];%,...
%         dat_plot.(vars{varLoop}).(clus_name{3})];
    clus_simple_mean = mean(dat_sel_1);
    clus_simple_std= std(dat_sel_1)/sqrt(length(dat_sel_1));   %clus_simple_std= sem(dat_sel);
    dat_sel_2 =  [dat_plot.(vars{varLoop}).(clus_name{4})];%,...
%         dat_plot.(vars{varLoop}).(clus_name{4})];
    clus_cmplx_mean = mean(dat_sel_2);
    clus_cmplx_std= std(dat_sel_2)/sqrt(length(dat_sel_2));  %clus_cmplx_std = sem(dat_sel);
%     plot([1 2], [clus_simple,clus_cmplx], '-o'), hold on
    [h, p, ci, stats] = ttest2(dat_sel_1,dat_sel_2);
    e2=errorbar([clus_simple_mean,clus_cmplx_mean],...
        [clus_simple_std,clus_cmplx_std], '-o');
    set(e2, 'MarkerSize', 6,'Color', clrOp1 , 'MarkerFaceColor', clrOp1 , ...
    'MarkerEdgeColor', clrOp1);
    set(e2,'LineWidth', 2 )
    xlim([0 3])
    title(sprintf('%s  \n p: %0.2f; t:%2.2f',vars_title{varLoop}, p, stats.tstat));   
    set(gca,'XTick',[1 2])
    set(gca,'XTickLabel',{'Elevation 0^o', 'Elevation 30^o'} );
    set(gca, 'Color', 'white');
    box off
    plotPosition=plotPosition+1;
end

suptitle({'Effect of elevation - complex task - anti-gravity muscles (n=4)',' '})

set (gcf, 'Units', 'Normalized', 'OuterPosition', [0,0,0.48,0.6]);
set(gcf, 'Color', 'white');
saveas(gcf, 'Fig5_elevation_complex_AG_2.png');
export_fig Fig5_elevation_complex_AG_2.png -m2;

saveas(gcf, 'Fig5_elevation_complex_AG_2.pdf');
export_fig Fig5_elevation_complex_AG_2.pdf;
